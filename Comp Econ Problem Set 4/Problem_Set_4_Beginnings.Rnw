\documentclass{article}

\title{Problem Set 1}
\author{Tony Lashley}
\date{April 30, 2015}

\usepackage{mathtools}
\usepackage{graphicx}

\begin{document}

\section{Function Approximation Warmup}
\subsection{Exploring and downloading the data}

<<>>==

rm(list=ls())           # Clear the workspace
set.seed(20866) 
library(ggplot2)
library(sandwich)
library(car)
library(xtable)
library(aod)
library(systemfit)
library(MASS)
library(stargazer)

setwd("/Users/Tony/Downloads")

data <- read.csv("cps_00005.csv")
datamatrix <- as.matrix(read.csv("cps_00005.csv"))
datamatrix <- datamatrix[,-5:-8]
datamatrix <- datamatrix[,-2:-3]

AdjInc <- c(rep(NA, nrow(datamatrix)))

datamatrix <- cbind(datamatrix, AdjInc)

datamatrix <- datamatrix[datamatrix[,9]!= 0,]
datamatrix <- datamatrix[datamatrix[,9]!= 9999999,]



incomeadjust <- function(data.m = datamatrix, sampq = TRUE){
  
  for (i in 1:nrow(datamatrix)){
    
    year <- as.numeric(datamatrix[i,1])
    income <- as.numeric(datamatrix[i,9])
    
    if (year == 2004){
      
      AdjustedIncome <- income * 1.25
      datamatrix[i,10] = round(AdjustedIncome)
    }
    
    if (year == 2014){
      
      AdjustedIncome <- income
      datamatrix[i,10] = round(AdjustedIncome)
    }
    
    
  }
  
 if (sampq == TRUE){
  top <- head(datamatrix, n=15)
  bottom<- tail(datamatrix, n=15)
  
  sample <- rbind(top,bottom)
  row.names(sample) <- NULL
  return(sample)
  
 }
 
 if (sampq == FALSE){
   return(datamatrix)
 }
}

incomeadjust(datamatrix, TRUE)

@

To find the CPI, I used the Bureau of Labor Statistics CPI Inflation Calculator, which told me that a dollar in 2004 has the same buying power as $1.25 in 2014. Therefore, to adjust 2004 income to its 2014 equivalent, I wrote a function that multiplied all 2004 incomes by $1.25.

\subsection{Make a new variable that is log wage income in your data}

<<>>==

sample <- incomeadjust(datamatrix) 
logInc <- c(rep(NA, nrow(sample)))
sample <- cbind(sample, logInc)



logVarf <- function(data.m = sample){
  
  for (i in 1:nrow(sample)){
    
    rowIncomeLog <- log(sample[i,10]) 
    sample[i,11] <- rowIncomeLog
    
  }  
  
  ## return(datamatrix) Commenting out so it doesn't actually return this
  return(sample)
  
}

logVarf(sample)

@

\subsection{Construct "potential experience", which will be "Age - years of schooling - 5"}

<<>>==

sample <- logVarf(sample)
potExp <- c(rep(NA, nrow(sample)))
sample <- cbind(sample, potExp)

potExpf <- function(data.m = sample){
  
  for (i in 1:nrow(sample)){
    
    indAge = as.numeric(sample[i,3])
    indEduCode = as.numeric(sample[i,6])
    
    if (indEduCode < 6){
      indYrsOfSch = 9
      indPotExp = indAge - indYrsOfSch - 5
      sample[i,12] = indPotExp
      
    }
    
    if (indEduCode == 6){
      indYrsOfSch = 10
      indPotExp = indAge - indYrsOfSch - 5
      sample[i,12] = indPotExp
      
    }
    
    if (indEduCode == 7){
      indYrsOfSch = 11
      indPotExp = indAge - indYrsOfSch - 5
      sample[i,12] = indPotExp
      
    }
    
    if (indEduCode == 8){
      indYrsOfSch = 12
      indPotExp = indAge - indYrsOfSch - 5
      sample[i,12] = indPotExp
      
    }
    
    if (indEduCode == 9){
      indYrsOfSch = 13
      indPotExp = indAge - indYrsOfSch - 5
      sample[i,12] = indPotExp
      
    }
    
    if (indEduCode == 10){
      indYrsOfSch = 13
      indPotExp = indAge - indYrsOfSch - 5
      sample[i,12] = indPotExp
      
    }
    
    if (indEduCode == 11){
      indYrsOfSch = 14
      indPotExp = indAge - indYrsOfSch - 5
      sample[i,12] = indPotExp
      
    }
    
    if (indEduCode == 12){
      indYrsOfSch = 15
      indPotExp = indAge - indYrsOfSch - 5
      sample[i,12] = indPotExp
      
    }
    
    if (indEduCode == 13){
      indYrsOfSch = 15
      indPotExp = indAge - indYrsOfSch - 5
      sample[i,12] = indPotExp
      
    }
    
    if (indEduCode == 14){
      indYrsOfSch = 15
      indPotExp = indAge - indYrsOfSch - 5
      sample[i,12] = indPotExp
      
    }
    
    if (indEduCode == 15){
      indYrsOfSch = 17
      indPotExp = indAge - indYrsOfSch - 5
      sample[i,12] = indPotExp
      
    }
    
    if (indEduCode == 16){
      indYrsOfSch = 19
      indPotExp = indAge - indYrsOfSch - 5
      sample[i,12] = indPotExp
      
    }
    
    if (indEduCode == 17){
      indYrsOfSch = 19
      indPotExp = indAge - indYrsOfSch - 5
      sample[i,12] = indPotExp
      
    }
    
    if (indEduCode == 18){
      indYrsOfSch = 22
      indPotExp = indAge - indYrsOfSch - 5
      sample[i,12] = indPotExp
      
    }
    
  }  
  
  ## return(datamatrix) Commenting out so it doesn't actually return this
  return(sample)
  
}

potExpf(sample)

@

\subsection{Make a table comparing the following regressions for 2014 and 2014}

<<>>==

library(stargazer)

sample <- potExpf(sample)

fit <- lm()


@

\end{document}